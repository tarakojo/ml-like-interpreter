match (1, (2, 3)) with
  (x, (y, z)) -> z
end;;

match 1 :: 2 :: 3 :: [] with
  h :: t -> h
| [] -> 0
end;;

match 1 :: 2 :: 3 :: [] with
  x :: y :: t -> t
| z -> 0
end;;

let rec f x = g x
and     g x = h x
and     h x = x * 2
in
f 3;;

let rec f x = if 10 < x then x else h x
and     h x = f (x * 2)
in
f 3;;

let rec even x = if x = 0 then true else odd (x - 1)
and     odd x = if x = 0 then false else even (x - 1)
in
even 3;;